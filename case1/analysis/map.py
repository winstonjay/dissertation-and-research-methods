'''
map.py :
Take a data .record file generated by cserver.py and extract all unique
keys with an average score of over 3 writing the results to a csv file.
'''
import argparse
import collections
import csv


def main():
    args = parse_args()
    fieldnames = ('idx', 'id', 'score')
    records = [[] for _ in range(500)]
    ids     = [0 for _ in range(500)]
    with open(args.file) as record_fp:
        reader = csv.DictReader(record_fp, fieldnames=fieldnames)
        for line in reader:
            records[int(line['idx'])].append(int(line['score']))
            ids[int(line['idx'])] = line['id']

    records_avg = map(avg, records)
    with open(args.out, 'w+') as fp:
        print(f'idx,id,score', file=fp)
        for i, r in enumerate(records_avg):
            if r > 3:
                print(f'{i},{ids[i]},{r}', file=fp)


def avg(a): return sum(a) / len(a)

def parse_args():
    'Parse args and return formatted args.'
    parser = argparse.ArgumentParser()
    parser.add_argument('file', type=str, help='ndjson file to explore')
    parser.add_argument(
        '-o',
        '--out',
        type=str,
        help='name of output explore',
        default="out.map.csv")
    return parser.parse_args()

if __name__ == '__main__':
    main()